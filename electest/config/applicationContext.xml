<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
		                    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		                    http://www.springframework.org/schema/context 
		                    http://www.springframework.org/schema/context/spring-context-3.0.xsd
		                    http://www.springframework.org/schema/tx 
		                    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		                    http://www.springframework.org/schema/aop 
		                    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"> 
		<!-- 1.添加组件对注释的支持 -->
		<context:component-scan base-package="com.xing.elec"></context:component-scan>  
		<!-- 2.? -->
		<!-- 2:c3p0连接池 -->
<!-- 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/itheima1128elec?useUnicode=true&amp;characterEncoding=utf8"/>
		<property name="user" value="root" />
		<property name="password" value="root" />
		连接池中保留的最小连接数。
		<property name="minPoolSize" value="5" />
	
		连接池中保留的最大连接数。Default: 15
		<property name="maxPoolSize" value="30" />
	
		初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3
		<property name="initialPoolSize" value="10"/>
	
		最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0
		<property name="maxIdleTime" value="60"/>
	
		当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3
		<property name="acquireIncrement" value="5" />
	
		JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements  
			属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。  
			如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0
		<property name="maxStatements" value="0" />
	
		每60秒检查所有连接池中的空闲连接。Default: 0
		<property name="idleConnectionTestPeriod" value="60" />
	
		定义在从数据库获取新连接失败后重复尝试的次数。Default: 30
		<property name="acquireRetryAttempts" value="30" />
	
		获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效  
			保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试  
			获取连接失败后该数据源将申明已断开并永久关闭。Default: false
		<property name="breakAfterAcquireFailure" value="true" />
    </bean> -->
		<!-- 3.spring整合hibernate的核心 -->
		<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
			<property name="configLocation">
				<value>
					classpath:hibernate.cfg.xml
				</value>
			</property>
			<!--以下两种配置可以省去hibernate.cfg.xml配置文件 -->
			<!--1. 用来加载hibernate的映射文件
				把指定路径下面的所欲映射文件全部加载完毕
				会加载指定路径下所有的映射文件
				并且还能指定子路径下的所有的映射文件	
			 -->
			<!-- <property name="mappingDirectoryLocations">
				<list>
					<value>classpath:com/xing/elec/domain</value>
				</list>
			</property> -->
			<!--2. 加载hibernate的配置信息 -->
		<!-- 	<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.hbm2ddl.auto">update</prop>
				</props>
			</property> -->
		</bean>
		
		<!-- 4.创建事务管理器 -->
		<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
			<property name="sessionFactory" ref="sessionFactory"></property>
		</bean>             
		<!--声明式事务处理 -->
		<!-- 事务处理 ：注释，在Service 层中填写一个注解@Transcational -->
		<tx:annotation-driven transaction-manager="transactionManager"/>
		
		<!-- 以下的配置信息为     配置方式实现事务处理 -->
	<!-- 	<tx:advice id="bb" transaction-manager="transactionManager">
		 	<tx:attributes>
		 		<tx:method name="save*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
		 		<tx:method name="update*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
		 		<tx:method name="delete*" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
		 		<tx:method name="*" read-only="true"/>
		 	</tx:attributes>
		</tx:advice>  -->
		
		<!--配置切点表达式  -->
	<!-- 	<aop:config>
			<aop:pointcut expression="execution(* com.xing.elec.service..*.*(..))" id="aa"/>
			<aop:advisor advice-ref="bb" pointcut-ref="aa"/>
		</aop:config> -->
</beans>
